version: "3.9"
services:
  # traefik:
  #   image: traefik:v2.10
  #   container_name: traefik
  #   restart: always
  #   command:
  #     - "--api.insecure=true" # Enable Traefik dashboard (disable or secure in production)
  #     - "--providers.docker=true"
  #     - "--providers.docker.exposedbydefault=false"
  #     - "--entrypoints.web.address=:80"
  #     - "--entrypoints.websecure.address=:443"
  #     - "--certificatesresolvers.myresolver.acme.tlschallenge=true"
  #     - "--certificatesresolvers.myresolver.acme.email=ahmed@thevamgroup.com"
  #     - "--certificatesresolvers.myresolver.acme.storage=/letsencrypt/acme.json"
  #   ports:
  #     - "80:80"
  #     - "443:443"
  #     - "8080:8080" # Traefik dashboard
  #   volumes:
  #     - "/var/run/docker.sock:/var/run/docker.sock:ro"
  #     - "./letsencrypt:/letsencrypt" # Persistent storage for certificates
  #   networks:
  #     - th_app_network

  app:
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    depends_on:
      postgres:
        condition: service_healthy
    environment:
      NODE_ENV: ${NODE_ENV}
      DB_USER: ${DB_USER}
      DB_PASSWORD: ${DB_PASSWORD}
      DB_HOST: ${DB_HOST}
      DB_NAME: ${DB_NAME}
      DB_PORT: ${DB_PORT}
    networks:
      - th_app_network

  postgres:
    image: postgres:latest
    container_name: my-postgres-db
    ports:
      - "6432:5432"
    environment:
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: ${DB_NAME}
    volumes:
      - ./docker_data/pg_data_31:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U your_user -h localhost || exit 1"]
      interval: 5s
      timeout: 5s
      retries: 5
    networks:
      - th_app_network

networks:
  th_app_network:
    driver: bridge
